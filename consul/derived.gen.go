// Code generated by goderive DO NOT EDIT.

package consul

// deriveEqualResults returns whether this and that are equal.
func deriveEqualResults(this, that map[string]string) bool {
	if this == nil || that == nil {
		return this == nil && that == nil
	}
	if len(this) != len(that) {
		return false
	}
	for k, v := range this {
		thatv, ok := that[k]
		if !ok {
			return false
		}
		if !(v == thatv) {
			return false
		}
	}
	return true
}

// deriveCloneResults returns a clone of the src parameter.
func deriveCloneResults(src map[string]string) map[string]string {
	if src == nil {
		return nil
	}
	dst := make(map[string]string)
	deriveDeepCopy(dst, src)
	return dst
}

// deriveDeepCopy recursively copies the contents of src into dst.
func deriveDeepCopy(dst, src map[string]string) {
	for src_key, src_value := range src {
		dst[src_key] = src_value
	}
}
